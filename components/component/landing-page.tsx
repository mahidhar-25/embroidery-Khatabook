/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/66HURX3Rqyf
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";

import { useState } from "react";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import DesignsTab from "./DesignsTab";
import KhataBook from "./KhataBook";

export function LandingPage() {
    const [activeTab, setActiveTab] = useState("designs");
    const [searchTerm, setSearchTerm] = useState("");
    const [selectedDesign, setSelectedDesign] = useState(null);

    const designs = [
        {
            id: 1,
            name: "Floral Bouquet",
            stitches: 5000,
            hours: 20,
        },
        {
            id: 2,
            name: "Paisley Pattern",
            stitches: 3500,
            hours: 15,
        },
        {
            id: 3,
            name: "Mandala Motif",
            stitches: 7000,
            hours: 25,
        },
        {
            id: 4,
            name: "Geometric Embroidery",
            stitches: 4000,
            hours: 18,
        },
    ];

    const khataBook = [
        {
            id: 1,
            username: "JohnDoe",
            designName: "Floral Bouquet",
            amount: 50.0,
            paymentStatus: "Paid",
            paidDate: "2023-05-01",
        },
        {
            id: 2,
            username: "JaneSmith",
            designName: "Paisley Pattern",
            amount: 40.0,
            paymentStatus: "Pending",
            paidDate: "2023-04-15",
        },
        {
            id: 3,
            username: "BobJohnson",
            designName: "Mandala Motif",
            amount: 60.0,
            paymentStatus: "Paid",
            paidDate: "2023-03-20",
        },
        {
            id: 4,
            username: "SarahLee",
            designName: "Geometric Embroidery",
            amount: 45.0,
            paymentStatus: "Paid",
            paidDate: "2023-02-28",
        },
    ];
    const totalDesigns = designs.length;
    const totalStitches = designs.reduce(
        (total, design) => total + design.stitches,
        0
    );
    const totalHours = designs.reduce(
        (total, design) => total + design.hours,
        0
    );
    const totalRevenue = khataBook.reduce(
        (total, entry) => total + entry.amount,
        0
    );
    const filteredDesigns = designs.filter((design) =>
        design.name.toLowerCase().includes(searchTerm.toLowerCase())
    );
    const filteredKhataBook = khataBook.filter(
        (entry) =>
            entry.username.toLowerCase().includes(searchTerm.toLowerCase()) ||
            entry.designName.toLowerCase().includes(searchTerm.toLowerCase())
    );
    const handleDesignClick = (design: any) => {
        setSelectedDesign(design);
    };
    return (
        <div className="flex flex-col h-screen">
            <header className="bg-primary text-primary-foreground py-4 px-6">
                <h1 className="text-2xl font-bold">Embroidery Khata Book</h1>
                <nav className="flex justify-center mt-4">
                    <button
                        className={`px-4 py-2 rounded-t-lg ${
                            activeTab === "designs"
                                ? "bg-primary-foreground text-primary"
                                : "hover:bg-primary-foreground/20"
                        }`}
                        onClick={() => setActiveTab("designs")}
                    >
                        Designs
                    </button>
                    <button
                        className={`px-4 py-2 rounded-t-lg ${
                            activeTab === "khataBook"
                                ? "bg-primary-foreground text-primary"
                                : "hover:bg-primary-foreground/20"
                        }`}
                        onClick={() => setActiveTab("khataBook")}
                    >
                        Khata Book
                    </button>
                    <button
                        className={`px-4 py-2 rounded-t-lg ${
                            activeTab === "dashboard"
                                ? "bg-primary-foreground text-primary"
                                : "hover:bg-primary-foreground/20"
                        }`}
                        onClick={() => setActiveTab("dashboard")}
                    >
                        Dashboard
                    </button>
                </nav>
            </header>
            <div className="flex-1 overflow-y-auto">
                {activeTab === "designs" && <DesignsTab designs={designs} />}
                {activeTab === "khataBook" && (
                    <KhataBook khataBook={khataBook} />
                )}
                {activeTab === "dashboard" && (
                    <div className="p-6 grid grid-cols-2 gap-6">
                        <Card>
                            <CardHeader>
                                <CardTitle>Total Designs</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-4xl font-bold">
                                    {totalDesigns}
                                </div>
                            </CardContent>
                        </Card>
                        <Card>
                            <CardHeader>
                                <CardTitle>Total Stitches</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-4xl font-bold">
                                    {totalStitches.toLocaleString()}
                                </div>
                            </CardContent>
                        </Card>
                        <Card>
                            <CardHeader>
                                <CardTitle>Total Hours</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-4xl font-bold">
                                    {totalHours.toFixed(2)}
                                </div>
                            </CardContent>
                        </Card>
                        <Card>
                            <CardHeader>
                                <CardTitle>Total Revenue</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-4xl font-bold">
                                    ${totalRevenue.toFixed(2)}
                                </div>
                            </CardContent>
                        </Card>
                    </div>
                )}
            </div>
        </div>
    );
}

// {
//     selectedDesign && (
//         <Dialog open onOpenChange={() => setSelectedDesign(null)}>
//             <DialogContent>
//                 <div className="grid grid-cols-2 gap-6">
//                     <div>
//                         <img
//                             src="/placeholder.svg"
//                             alt={selectedDesign.name}
//                             width={400}
//                             height={400}
//                             className="w-full h-auto rounded-lg"
//                             style={{
//                                 aspectRatio: "400/400",
//                                 objectFit: "cover",
//                             }}
//                         />
//                     </div>
//                     <div className="grid gap-4">
//                         <div>
//                             <h2 className="text-2xl font-bold">
//                                 {selectedDesign.name}
//                             </h2>
//                             <p className="text-muted-foreground">
//                                 {selectedDesign.stitches} stitches,{" "}
//                                 {selectedDesign.hours} hours
//                             </p>
//                         </div>
//                         <div>
//                             <Label htmlFor="quantity">Quantity</Label>
//                             <Input
//                                 type="number"
//                                 id="quantity"
//                                 min="1"
//                                 defaultValue="1"
//                             />
//                         </div>
//                         <div className="flex justify-end">
//                             <Button>Add to Cart</Button>
//                         </div>
//                     </div>
//                 </div>
//             </DialogContent>
//         </Dialog>
//     );
// }
